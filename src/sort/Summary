排序算法总结：共8种

O(N^2)
选择排序 selection
冒泡排序 bubble
插入排序 insert/insertion

O(N*logN)
归并排序 merge
堆排序  heap
快速排序 quick  （快速排序 1.0/2.0/3.0 = 随机快排）

桶排序 O(N) (不基于比较的排序，包括以下两种)
1.计数排序 count
2.基数排序 radix（个位 - 十位 - 百位...）
------------------------------------------
排序算法的稳定性：相同数值的相对次序不会乱
稳定：
冒泡排序，插入排序，归并排序，桶排序

不稳定：
选择排序，堆排序，快速排序
--------------------------------------------

                时间       额外空间     稳定性
选择排序        O(N^2)      O(1)        No
冒泡排序        O(N^2)      O(1)        Yes
插入排序        O(N^2)      O(1)        Yes
归并排序        O(N*logN)   O(N)        Yes
堆排序          O(N*logN)   O(1)        No
快速排序（3.0）  O(N*logN)   O(logN)     No
桶排序          O(N)        O(N)        Yes

--------------------------------------------
1.不追求稳定性，只追求指标最优 & 常数时间最优 - 快排
2.就想额外空间很少 - 堆排序
3.追求稳定性 - 归并排序
4.想 时间O(N*logN)，额外空间低于O(N)，并且稳定 - 没有！

eg.让一个数组的所有奇数都在左边，所有偶数都在右边，并且所有数字保持相对次序 - 做不到！
解：奇数/偶数 可以看成 <=p/>p。快速排序破坏了稳定性。